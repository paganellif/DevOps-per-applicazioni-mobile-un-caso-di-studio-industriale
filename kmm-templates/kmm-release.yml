#########################################
# BASE ANDROID RELEASE
#########################################
.base-android:release:
  stage: release
  extends: .base-android
  variables:
    FL_SLACK_MESSAGE: to_be_extended
    SUPPLY_TRACK: "internal"
  cache:
    - key: "kotlin-cache"
      paths:
        - .konan
      policy: pull
    - key: "gradle-cache"
      paths:
        - .gradle
      policy: pull

#########################################
# ANDROID ALPHA RELEASE
#########################################
.android:release:alpha:
  extends: .base-android:release
  variables:
    FL_SLACK_MESSAGE: "_*NEW ANDROID ALPHA RELEASE*_\n\n*Pipeline Url*\n${CI_PIPELINE_URL}\n"
    SUPPLY_AAB: to_be_extended
    FL_GRADLE_TASK: "bundleRelease"
  script:
    - cd $PROJECT_DIR
    - bundle install
    - bundle exec fastlane run gradle
    - bundle exec fastlane run upload_to_play_store
    - bundle exec fastlane run slack
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE != "web"
      when: manual

#########################################
# ANDROID BETA RELEASE
#########################################
.android:release:beta:
  extends: .base-android:release
  variables:
    FL_SLACK_MESSAGE: "_*NEW ANDROID BETA RELEASE*_\n\n*Pipeline Url*\n${CI_PIPELINE_URL}\n"
    #SUPPLY_TRACK_PROMOTE_TO: "beta"
    SUPPLY_TRACK_PROMOTE_TO: "alpha"
  script:
    - cd $PROJECT_DIR
    - bundle install
    - bundle exec fastlane run upload_to_play_store
    - bundle exec fastlane run slack
  rules:
    - if: $CI_COMMIT_BRANCH == "test" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE != "web"
      when: manual

#########################################
# BASE IOS RELEASE
#########################################
.base-ios:release:
  stage: release
  extends: .base-ios
  variables:
    FL_SLACK_MESSAGE: to_be_extended
    PILOT_NOTIFY_EXTERNAL_TESTERS: "true"
    PILOT_GROUPS: to_be_extended
    PILOT_DISTRIBUTE_EXTERNAL: "true"
    FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${APP_SPECIFIC_PWD_FASTLANE}

#########################################
# IOS ALPHA RELEASE
#########################################
.ios:release:alpha:
  extends: .base-ios:release
  variables:
    FL_SLACK_MESSAGE: "_*NEW IOS ALPHA RELEASE*_\n\n*Pipeline Url*\n${CI_PIPELINE_URL}\n"
    PILOT_GROUPS: to_be_extended
    PILOT_IPA: to_be_extended
    PILOT_CHANGELOG: ""
  script:
    - pod install
    - bundle exec fastlane build_app
    - bundle exec fastlane run upload_to_testflight
    - bundle exec fastlane run slack
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE != "web"
      when: manual

#########################################
# IOS BETA RELEASE
#########################################
.ios:release:beta:
  stage: release
  extends: .base-ios:release
  variables:
    FL_SLACK_MESSAGE: "_*NEW IOS BETA RELEASE*_\n\n*Pipeline Url*\n${CI_PIPELINE_URL}\n"
    PILOT_GROUPS: to_be_extended
    PILOT_DISTRIBUTE_ONLY: "true"
    PILOT_PLATFORM: "ios"
  script:
    - bundle exec fastlane run upload_to_testflight
    - bundle exec fastlane run slack
  rules:
    - if: $CI_COMMIT_BRANCH == "test" && $CI_PIPELINE_SOURCE != "schedule" && $CI_PIPELINE_SOURCE != "web"
      when: manual

#########################################
# ANDROID PROD RELEASE
#########################################

#########################################
# IOS PROD RELEASE
#########################################
